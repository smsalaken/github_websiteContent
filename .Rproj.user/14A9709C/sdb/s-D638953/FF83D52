{
    "collab_server" : "",
    "contents" : "---\ntitle: Gantt chart using Gvis\nauthor: Salekin Mushfik\ndate: '2017-07-27'\nslug: gantt-chart-using-gvis\ncategories:\n  - visualization\ntags:\n  - gvis\noutput: \n  html_document: \n    fig_caption: yes\n---\n\nGantt chart can be very useful to visualize the occurance of certain events on a timeline.\nIf you need create one programmetically, you can use gvis package which utilizes plotting library from\nGoogle.\n\n\n```{r eval = FALSE}\n# get the data\ndf <- data_get() # make sure you get the data here\n\n\n\n# convert time to decimal hours, remove if not required\ndf$start.ct   <- as.POSIXct(paste(df$`Date Time`, df$start, sep = \" \"))\ndf$end.ct     <- as.POSIXct(paste(df$`Date Time`, df$end, sep = \" \"))\ndf$start.hour <- as.POSIXlt(df$start.ct)$hour + as.POSIXlt(df$start.ct)$min/60 + as.POSIXlt(df$start.ct)$sec/3600\ndf$end.hour   <- as.POSIXlt(df$end.ct)$hour + as.POSIXlt(df$end.ct)$min/60 + as.POSIXlt(df$end.ct)$sec/3600\n\n# do this if your start time and end time is same in the df\n# add one hour to start time if this is hourly, remove if needed\ndf$endTime <- df$start.ct+3600              \n\nlibrary(googleVis)\ndatTL <- data.frame(Position='',            # bar labels\n                    Name=df$`Child Object`, # the row label for Gantt charts\n                    start=df$start.ct,      # the start time\n                    end=df$endTime)         # the end time\n\n# the actual Gantt chart. If using in shiny, render via renderGvis\nTimeline <- \n  gvisTimeline(\n    data=datTL, \n    rowlabel=\"Name\",\n    barlabel=\"Position\",\n    start=\"start\", \n    end=\"end\",\n    options=list(timeline=\"{groupByRowLabel:true}\",  # one row for one label\n                width='100%',                        \n                height=700,                          \n                backgroundColor='#ffd', \n                height=350,\n                colors=\"['#cbb69d', '#603913', '#c69c6e']\"))  # what colors do you want on the chart?\n\n# testing the code\ncat('class Timeline:', class(Timeline),'\\n')         # It should be a gvis class\n```",
    "created" : 1501120729117.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1991195600",
    "id" : "FF83D52",
    "lastKnownWriteTime" : 1501121399,
    "last_content_update" : 1501121399331,
    "path" : "~/my_githubPageWebsite/hugo_webContent/content/post/2017-07-27-gantt-chart-using-gvis.Rmd",
    "project_path" : "content/post/2017-07-27-gantt-chart-using-gvis.Rmd",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}